{% comment %}
  Product template with 3D support and enhanced features
{% endcomment %}

<div class="product-page" id="product-{{ product.id }}">
  <div class="page-width">
    <div class="product-grid">
      
      <!-- Product Media -->
      <div class="product-media">
        <div class="product-gallery">
          {% if product.media.size > 0 %}
            <div class="gallery-main">
              {% for media in product.media %}
                <div class="gallery-item {% if forloop.first %}active{% endif %}" data-media-id="{{ media.id }}">
                  {% case media.media_type %}
                    {% when 'image' %}
                      <img 
                        src="{{ media | image_url: width: 800 }}"
                        alt="{{ media.alt | escape }}"
                        loading="lazy"
                        width="{{ media.width }}"
                        height="{{ media.height }}"
                        class="gallery-image"
                      >
                    {% when 'model' %}
                      {% render 'product-model-viewer', media: media, product: product %}
                    {% when 'video' %}
                      <video 
                        controls 
                        preload="metadata"
                        poster="{{ media.preview_image | image_url: width: 800 }}"
                        class="gallery-video"
                      >
                        <source src="{{ media.sources[1].url }}" type="video/mp4">
                        Your browser does not support the video tag.
                      </video>
                    {% when 'external_video' %}
                      <div class="external-video">
                        {{ media | external_video_tag }}
                      </div>
                  {% endcase %}
                </div>
              {% endfor %}
            </div>
            
            {% if product.media.size > 1 %}
              <div class="gallery-thumbnails">
                {% for media in product.media %}
                  <button 
                    class="thumbnail {% if forloop.first %}active{% endif %}"
                    data-media-id="{{ media.id }}"
                    aria-label="View {{ media.alt | escape }}"
                  >
                    {% if media.media_type == 'image' %}
                      <img 
                        src="{{ media | image_url: width: 100 }}"
                        alt="{{ media.alt | escape }}"
                        loading="lazy"
                        width="100"
                        height="100"
                      >
                    {% elsif media.media_type == 'model' %}
                      <img 
                        src="{{ media.preview_image | image_url: width: 100 }}"
                        alt="{{ media.alt | escape }}"
                        loading="lazy"
                        width="100"
                        height="100"
                      >
                      <span class="model-indicator">3D</span>
                    {% elsif media.media_type == 'video' %}
                      <img 
                        src="{{ media.preview_image | image_url: width: 100 }}"
                        alt="{{ media.alt | escape }}"
                        loading="lazy"
                        width="100"
                        height="100"
                      >
                      <span class="video-indicator">â–¶</span>
                    {% endif %}
                  </button>
                {% endfor %}
              </div>
            {% endif %}
          {% endif %}
        </div>
      </div>

      <!-- Product Info -->
      <div class="product-info">
        <div class="product-info-sticky">
          <div class="product-header">
            {% if product.vendor != blank %}
              <p class="product-vendor">{{ product.vendor | escape }}</p>
            {% endif %}
            <h1 class="product-title">{{ product.title | escape }}</h1>
            
            <div class="product-price">
              {% if product.compare_at_price > product.price %}
                <span class="price-compare">{{ product.compare_at_price | money }}</span>
                <span class="price-sale">{{ product.price | money }}</span>
                <span class="sale-badge">{{ 'products.product.sale' | t }}</span>
              {% else %}
                <span class="price-regular">{{ product.price | money }}</span>
              {% endif %}
            </div>
          </div>

          {% if product.description != blank %}
            <div class="product-description">
              {{ product.description }}
            </div>
          {% endif %}

          <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" class="product-form" id="product-form">
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            
            {% unless product.has_only_default_variant %}
              <div class="product-variants">
                {% for option in product.options_with_values %}
                  <div class="variant-option">
                    <label class="variant-label">{{ option.name | escape }}</label>
                    <div class="variant-values">
                      {% for value in option.values %}
                        <button 
                          type="button"
                          class="variant-value {% if option.selected_value == value %}selected{% endif %}"
                          data-option="{{ option.position }}"
                          data-value="{{ value | escape }}"
                        >
                          {% if option.name == 'Color' %}
                            <span class="color-swatch" style="background-color: {{ value | downcase | replace: ' ', '-' }}"></span>
                          {% endif %}
                          <span>{{ value | escape }}</span>
                        </button>
                      {% endfor %}
                    </div>
                  </div>
                {% endfor %}
              </div>
            {% endunless %}

            <div class="product-quantity">
              <label for="quantity" class="quantity-label">{{ 'products.product.quantity' | t }}</label>
              <div class="quantity-input">
                <button type="button" class="quantity-btn" data-action="decrease">-</button>
                <input 
                  type="number" 
                  id="quantity" 
                  name="quantity" 
                  value="1" 
                  min="1" 
                  class="quantity-field"
                >
                <button type="button" class="quantity-btn" data-action="increase">+</button>
              </div>
            </div>

            <div class="product-actions">
              <button 
                type="submit" 
                class="button button--primary add-to-cart-btn"
                {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %}
              >
                {% if product.selected_or_first_available_variant.available %}
                  {{ 'products.product.add_to_cart' | t }}
                {% else %}
                  {{ 'products.product.sold_out' | t }}
                {% endif %}
              </button>
              
              {% if settings.enable_quick_add %}
                <button type="button" class="button button--secondary quick-add-btn">
                  {{ 'products.product.quick_add' | t }}
                </button>
              {% endif %}
            </div>

            {% if product.metafields.custom.shipping_info != blank %}
              <div class="product-shipping">
                <p>{{ product.metafields.custom.shipping_info }}</p>
              </div>
            {% endif %}
          </form>

          <!-- Product Tabs -->
          <div class="product-tabs">
            <div class="tabs-nav">
              {% if product.metafields.custom.ingredients != blank %}
                <button class="tab-btn active" data-tab="ingredients">{{ 'products.product.ingredients' | t }}</button>
              {% endif %}
              {% if product.metafields.custom.how_to_use != blank %}
                <button class="tab-btn" data-tab="how-to-use">{{ 'products.product.how_to_use' | t }}</button>
              {% endif %}
              {% if product.metafields.custom.skin_type != blank %}
                <button class="tab-btn" data-tab="skin-type">{{ 'products.product.skin_type' | t }}</button>
              {% endif %}
            </div>
            
            <div class="tabs-content">
              {% if product.metafields.custom.ingredients != blank %}
                <div class="tab-panel active" id="ingredients">
                  {{ product.metafields.custom.ingredients }}
                </div>
              {% endif %}
              {% if product.metafields.custom.how_to_use != blank %}
                <div class="tab-panel" id="how-to-use">
                  {{ product.metafields.custom.how_to_use }}
                </div>
              {% endif %}
              {% if product.metafields.custom.skin_type != blank %}
                <div class="tab-panel" id="skin-type">
                  {{ product.metafields.custom.skin_type }}
                </div>
              {% endif %}
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Complete the Routine -->
    {% if product.metafields.custom.routine_products != blank %}
      <div class="routine-section section-padding">
        <div class="section-header text-center">
          <h2 class="section-title">{{ 'products.product.complete_routine' | t }}</h2>
        </div>
        <div class="routine-products">
          {% assign routine_handles = product.metafields.custom.routine_products | split: ',' %}
          {% for handle in routine_handles %}
            {% assign routine_product = all_products[handle] %}
            {% if routine_product %}
              {% render 'product-card', product: routine_product, show_vendor: false, show_rating: false %}
            {% endif %}
          {% endfor %}
        </div>
      </div>
    {% endif %}
  </div>
</div>

{% render 'structured-data', product: product %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Gallery functionality
    const thumbnails = document.querySelectorAll('.thumbnail');
    const galleryItems = document.querySelectorAll('.gallery-item');
    
    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        const mediaId = this.dataset.mediaId;
        
        // Update active thumbnail
        thumbnails.forEach(t => t.classList.remove('active'));
        this.classList.add('active');
        
        // Update active gallery item
        galleryItems.forEach(item => item.classList.remove('active'));
        document.querySelector(`[data-media-id="${mediaId}"]`).classList.add('active');
      });
    });

    // Quantity controls
    const quantityField = document.getElementById('quantity');
    const quantityBtns = document.querySelectorAll('.quantity-btn');
    
    quantityBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        const action = this.dataset.action;
        const currentValue = parseInt(quantityField.value);
        
        if (action === 'increase') {
          quantityField.value = currentValue + 1;
        } else if (action === 'decrease' && currentValue > 1) {
          quantityField.value = currentValue - 1;
        }
      });
    });

    // Variant selection
    const variantValues = document.querySelectorAll('.variant-value');
    variantValues.forEach(btn => {
      btn.addEventListener('click', function() {
        const option = this.dataset.option;
        const value = this.dataset.value;
        
        // Update selected variant value
        document.querySelectorAll(`[data-option="${option}"]`).forEach(b => b.classList.remove('selected'));
        this.classList.add('selected');
        
        // Update variant (simplified - in production, you'd want proper variant matching)
        // This would typically involve finding the matching variant and updating the form
      });
    });

    // Tabs functionality
    const tabBtns = document.querySelectorAll('.tab-btn');
    const tabPanels = document.querySelectorAll('.tab-panel');
    
    tabBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        const targetTab = this.dataset.tab;
        
        // Update active tab button
        tabBtns.forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        
        // Update active tab panel
        tabPanels.forEach(panel => panel.classList.remove('active'));
        document.getElementById(targetTab).classList.add('active');
      });
    });
  });
</script>